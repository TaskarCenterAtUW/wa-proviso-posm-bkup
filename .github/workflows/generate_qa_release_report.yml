name: Generate QA Release Report

on:
    schedule:
        # Runs daily at 2 AM UTC
        - cron: '0 2 * * *'
    workflow_dispatch:  # Allows manual trigger
jobs:
    generate_report:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3
            
            - name: Install Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r tdei-qa-reports.txt
            - name: Setup Output Folder name
              run: echo "OUTPUT_FOLDER=report-$(date +"%Y-%m-%d")" >> $GITHUB_ENV
            - name: Setup Environment Variables
              run: |
                    echo "TDEI_USERNAME=${{ secrets.TDEI_USERNAME }}" >> $GITHUB_ENV
                    echo "TDEI_PASSWORD=${{ secrets.TDEI_PASSWORD }}" >> $GITHUB_ENV
            - name: Run Report Generation Script
              working-directory: tdei-complete-set
              env:
                TDEI_USERNAME: ${{ secrets.TDEI_USERNAME }}
                TDEI_PASSWORD: ${{ secrets.TDEI_PASSWORD }}
              run: |
                  python download_both_project_groups.py
            - name: Upload Reports to Azure Blob Storage
              uses: LanceMcCarthy/Action-AzureBlobUpload@v2
              with:
                source_folder: tdei-complete-set/report-downlods
                connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION }}
                container_name: 'tdei-qa-reports'
                destination_folder: latest
                delete_if_exists: true
            - name: Upload Reports to Azure Blob Storage
              uses: LanceMcCarthy/Action-AzureBlobUpload@v2
              with:
                source_folder: tdei-complete-set/report-downlods
                connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION }}
                container_name: 'tdei-qa-reports'
                destination_folder: ${{ env.OUTPUT_FOLDER }}
                delete_if_exists: true